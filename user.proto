syntax = "proto3";

package usercontroller;

import "validator.proto";
import "method_option.proto";

service User {
    rpc RegisterUser(UserRegisterRequest) returns (UserRegisterResponse) {
        option (pbbase.option_base).ignore_token_verify = true;
    }

    rpc GetUserStatuses(Empty) returns (stream UserNotice) {
        option (pbbase.option_base).tx_option = ReadOnly;
    }

    rpc GetUserList(Empty) returns (stream UserInfo) {
        option (pbbase.option_base).tx_option = ReadOnly;
    }

    rpc UnregisterUser(UnregisterUserRequest) returns (Empty) {}
}

message Empty {}

message UserInfo {
    string name = 1;
}

message UserRegisterRequest {
    string account = 1 [(validator.field) = {string_not_empty: true}];
    string name = 2 [(validator.field) = {string_not_empty: true}];
    string password = 3 [(validator.field) = {string_not_empty: true}];
}

message UserRegisterResponse {
    string id = 1;
    string account = 2;
    string name = 3;
}

message UnregisterUserRequest {
}

message UserNotice {
    string name = 1;
    UserStatus status = 2;
}

enum UserStatus {
    CONNECTED = 0;
    DISCONNECTED = 1;
    REGISTERED = 2;
    UNREGISTERED = 3;
}

syntax = "proto3";

package usercontroller;

option go_package = "usercontroller";

import "p2pderivatives-server/internal/common/grpc/pbbase/method_option.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

service User {
    rpc RegisterUser(UserRegisterRequest) returns (UserRegisterResponse) {
        option (pbbase.option_base).ignore_token_verify = true;
    }

    rpc GetConnectedUsers(Empty) returns (stream UserInfo) {
        option (pbbase.option_base).tx_option = ReadOnly;
    }

    rpc ReceiveDlcMessages(Empty) returns (stream DlcMessage) {
        option (pbbase.option_base).tx_option = ReadOnly;
    }

    rpc SendDlcMessage(DlcMessage) returns (Empty) {
        option (pbbase.option_base).tx_option = ReadOnly;
    }

    rpc GetUserList(Empty) returns (stream UserInfo) {
        option (pbbase.option_base).tx_option = ReadOnly;
    }

    rpc UnregisterUser(UnregisterUserRequest) returns (Empty) {}
}

message Empty {}

message UserInfo {
    string name = 1;
}

message UserRegisterRequest {
    string name = 1 [(validator.field) = {string_not_empty: true}];
    string password = 2 [(validator.field) = {string_not_empty: true}];
}

message UserRegisterResponse {
    string id = 1;
    string name = 2;
}

message UnregisterUserRequest {
}

message DlcMessage {
    string dest_name = 1;
    string org_name = 2;
    bytes payload = 3;
}

syntax = "proto3";

package authentication;

import "validator.proto";
import "method_option.proto";

service Authentication {
    rpc Login(LoginRequest) returns (LoginResponse) {
        option (pbbase.option_base).ignore_token_verify = true;
    }

    rpc Refresh (RefreshRequest) returns (RefreshResponse) {}

    rpc Logout(LogoutRequest) returns (Empty) {}
}

message Empty {}

message TokenInfo {
    string access_token = 1;
    string refresh_token = 2;
    int64 expires_in = 3;
  }

message LoginRequest {
    string account = 1 [(validator.field) = {string_not_empty: true}];
    string password = 2 [(validator.field) = {string_not_empty: true}];
}

message LoginResponse {
    string name = 1;
    string account = 2;
    TokenInfo token = 3;
    string connection_id = 6;
    bool require_change_password = 7;
}

message RefreshRequest {
    string refresh_token = 1 [(validator.field) = {string_not_empty: true}];
}

message RefreshResponse {
    TokenInfo token = 1;
}

message LogoutRequest {
    string refresh_token = 1 [(validator.field) = {string_not_empty: true}];
    string connection_id = 2 [(validator.field) = {string_not_empty: true}];
}
